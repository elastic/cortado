name: Release

on:
  push:
    branches:
      - main

jobs:
  dev-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: '3.12'
      - name: Set up cache
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: ./.venv
          key: venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        name: Create a virtual env
        run: python3 -m venv ./.venv
      - if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        name: Install dependencies
        run: |
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install poetry
          poetry config installer.parallel false
          poetry install --with dev --all-extras
      - name: Build a wheel
        run: |
          . .venv/bin/activate
          DEV_RELEASE=$(git rev-parse --short=8 HEAD)
          poetry version "$(poetry version -s)+$DEV_RELEASE"
          poetry build -f wheel
      - name: Generate Release Notes from Commits Between Tags
        id: release_notes
        run: |
          # Get the latest and previous tags
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)

          echo "$LAST_TAG"

          # Get commits between the two tags
          NOTES=$(git log $LAST_TAG..HEAD --pretty=format:"- %s")
          echo "$NOTES"

          # Store notes in an environment variable
          echo "RELEASE_NOTES=$NOTES" >> ./notes.txt
      - name: Create a release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          . .venv/bin/activate
          POETRY_VERSION=$(poetry version -s)
          RELEASE_NOTES=$(cat ./notes.txt)
          gh release create "dev-release-$POETRY_VERSION" \
            dist/cortado-*-py3-none-any.whl \
            --notes "$RELEASE_NOTES" \
            --title "dev-release-$POETRY_VERSION"
